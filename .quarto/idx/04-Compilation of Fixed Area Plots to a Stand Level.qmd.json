{"title":"Exercise 4: Compilation of Fixed-Area Plots to a Stand Level","markdown":{"yaml":{"title":"Exercise 4: Compilation of Fixed-Area Plots to a Stand Level","format":"html","editor":"visual"},"headingText":"Lab Overview","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n\n```{r echo=FALSE}\nyml_content <- yaml::read_yaml(\"chapterauthors.yml\")\nauthor <- yml_content[[\"terrain-spatial-interpolation\"]][[\"author\"]]\n```\n\nWritten by\n\n```{r results='asis', echo=FALSE}\ncat(author)\n```\n\n\nThis lab builds on our previous work to introduce more stand-level summaries as well as using forest data to summarize important forest attributes like volume and biomass. You will work with formulas, created from test data, to understand a forest-stand. Using your estimates you will produce a data summary for a landowner. You may work in groups for this lab, but each student must be able to run the code on their own computer.\n\n------------------------------------------------------------------------\n\n## Learning Objectives {.unnumbered}\n\n-   Practice analysis of fixed-area plots to obtain plot summaries.\n\n-   Use simple random sampling to summarize plot-level data to obtain a stand-level summary\n\n-   Summarize tree-level data to obtain plot-level stand and stock tables. Use this tree level data to obtain stand-level stock and stand tables\n\n## Problem Introduction {.unnumbered}\n\n**General Description**\n\nA landowner hires you to conduct a survey of a 30-ha forested parcel of land (BC Coast). In particular, the owner would like to know how much they could make on the carbon market if they kept this forest intact and sold the carbon credits. From reading several documents, you find out that: 1) about 50% of aboveground biomass is carbon; and 2) the rate for carbon credits is about \\$65 CAD per C tonne. The owner would also like to know general information about the timber characteristics for general management purposes.\n\n------------------------------------------------------------------------\n\n## Key Formulas {.unnumbered}\n\nFor today's data investigation we will use formulas created by the ministry to calculate volume and dry biomass for different tree species in British Columbia. Models for volume use Schumaker's volume function. The coefficients are described in the table below.\n\n\\$\\$ Volume(m\\^3) = 10\\^{(A +B(Log\\_{10}(DBH(cm))) + C\\*(Log\\_{10}(Height(m))))}\\$\\$\n\n```{r}\n#| echo: false \n#| warning: false\n#| tbl-cap: BC Ministry of Forest Volume Coefficients \nset.seed(123)\nlibrary(pacman)\np_load(tidyverse, flextable, knitr)\n#main coefficients \ntree_types  <- c('immature western red cedar', 'immature western hemlock', 'immature douglas fir', 'mature western red cedar', 'mature western hemlock', 'mature douglas fir', 'red alder', 'bitter cherry')\n\n# main coefficients \nA <- c(4.139118, -4.41882, -4.319071, -4.103107, -4.3374,-4.348375, -4.431705,-4.431705)\nB <- c(1.716770,1.867780,1.813820,1.743240,1.783500,1.692440,1.778590,1.778590)\nC <- c(1.047420,1.099890,1.042420,0.981729,1.120230,1.181970,1.090770,1.090770) \n# Reshape and mutate\nvolume_df <- data.frame(tree_types, A, B, C, Type = 'BC\\nTraditional') %>% \n  arrange(Type) %>% mutate_if(is.numeric, .funs = round, digits =2)\n# Create a pretty flextable ## group by Type \nkable(volume_df, col.names = c('Tree Types', 'A', 'B', 'C', 'Source'))\n# ft <- as_grouped_data(volume_df, groups = \"Type\") %>% \n#   flextable(.) %>% \n#   theme_vanilla() %>% # Merging tree_types column to create a visual grouping \n#   set_header_labels(\n#     tree_types = \"Tree Types\",\n#     A = \"A\", B = \"B\", C = \"C\") %>% \n#   autofit() %>% \n#   set_caption(\"Volume Coefficients\")\n# ft\n\n```\n\nSimilarly, Biomass equations use the following formula:\n\n$$\nBiomass = Intercept+ Slope * DDH\n$$\n\nWhere DDH is the diameter squared times the height of the tree. $$\nDDH = (DBH(cm)/100)*(DBH(cm)/100)*Height(m) \n$$\n\n```{r}\n#| echo: false\n# biomass coefficients \n#| tbl-cap: Biomass Coefficients sourced from Standish et al. 1985\ntrees_types_biomass <- c('mature western red cedar', 'mature western hemlock', 'mature douglas fir', 'red alder', 'bitter cherry')\nint <- c(40.4, 29.8, 37.2, 4.8, 4.8)\nslope <- c(96.9, 155.8, 139.3, 206.5, 206.5)\nbiomass_df <- data.frame(trees_types_biomass, int, slope) %>% mutate_if(is.numeric, .funs = round, digits = 2)\nkable(biomass_df, col.names = c('Tree Types', 'Intercepts', 'Slope'))\n# biomass_ft <- flextable(biomass_df) %>% \n#   theme_vanilla() %>% \n#   set_header_labels(\n#     trees_types_biomass = \"Tree Types\",\n#     int = \"Intercept\", slope = \"Slope\") %>% \n#   autofit() %>% \n#   set_caption(\"Biomass Coefficients\")\n# biomass_ft\n```\n\n## Data Description {.unnumbered}\n\nYou decide to use a systematic sampling approach to determine plot centres for *n*=4 plots. For each plot center, you establish a circular, fixed-area plot (r=11.27 m; 0.04 ha) aiming to sample all trees which are ≥ 2.0 cm DBH within this radius. Some plots had a lot of trees and thus a process of \"Half Sweeps\" was conducted, where a randomly chosen half of the 0.04 ha (or a slice) was selected and only trees in that half of the plot were recorded (i.e., each tree counts twice in the 0.04 ha plot OR the plot size was reduced to 0.02 ha).\n\nFor each tree (DBH≥2.0 cm) in the plot (full or half plot), the species was recorded and the DBH (cm) was measured. On a subset of trees, the height (m) was measured in the field. For the remaining trees, the height was estimated in the office using existing height/DBH models (i.e., for each tree without height, the species-specific models developed for this area were used to estimate height from DBH).  For broken trees, the height to the break was measured in the field, and an estimate of the height that the tree might have been if not broken was also recorded in the field. A snapshot of these data are provided below.\n\nFrom these data, you determine the characteristics of the forest land and report these to the landowner, along with your estimate of potential carbon credits.\n\n```{r}\n#| echo: false\n## data \nplot_data <- read.csv(\"Lab4_Plotdata.csv\")\nplot_data %>% group_by(PlotNo) %>% \n  summarise(number_trees = n(), \n            plot_type = unique(Partial.)) %>% kable(., caption = \"Description of four selected plots including # trees & plot type\")\n\n```\n\n## Plot Level Analyses {.unnumbered}\n\nFollowing the example code below (using fake data!) use the *real* data included in your lab exercises to calculate the average tree size in terms of DBH, height and basal area per tree, total volume per tree, and biomass. Remember to report the measurements units for each of these metrics. The code below includes both a right and a wrong version. In your analysis, discuss which version you used and why. Additionally, there were some useful formulas created to analyse data in lab 3. We'll be working work this code for our analyses. Click the down-arrow to look at these functions\n\n```{r}\n#| warning: false \n#| code-fold: true\n#| code-summary: \"Useful Statistical Functions\"\nset.seed(1234)\n# load packages \nlibrary(pacman)\np_load(tidyverse, ggplot2, dplyr)\n## set up some useful functions \n## variance around the maean \nvar_simple_random <- function(data){\n  #data = numeric vector of dataset\n  ybar <- mean(data, na.rm =T) ## calculate the mean\n  top_sum <- sum((data - ybar) ^ 2)\n  df <- length(data)\n  var_simple <- top_sum/ (df-1)\n  return(var_simple)\n}\n## standard deviation w and without replacement \nsd_simple_random <- function(data, replacement = T, N_big = NULL) {\n  #data = numeric vector of dataset\n  #replacement = a logical value indicating whether sample is with or without replacement \n  #N_big = an optional numeric value representing the total population size when sampling without replacement\n  ybar <- mean(data, na.rm = T) ## calculate the mean\n  top_sum <- sum((data - ybar) ^ 2)\n  df <- length(data)\n  var_simple <- top_sum / (df - 1)\n  if (replacement == F) { # replacement is NOT true\n    ## adjustment neded to control for the limited sampel\n    if (length(N_big) == 0) {\n      return('Total Possible Needed')\n    } else if (length(N_big) > 0) {\n      adj_fct <- (N_big - df) / N_big\n      sd_mean = (var_simple / df) * adj_fct\n      return(sd_mean)\n    }\n  }\n  else {\n    sd_mean = var_simple / df\n    return(sd_mean)\n  }\n}\n## confidence intervals for mean of population\nconfident_interval <- function(x, alpha = 0.05){\n  #data = numeric vector of dataset\n  #alpha = confidence interval (default is 0.95)\n  n <- length(x)\n  mean_x <- mean(x, na.rm = T)\n  ## this is the sd of the mean \n  se <- sd(x, na.rm =T)/sqrt(n)\n  t_value <- qt(1 - alpha/2, df = n - 1)\n  ## confidence ofthe mean of the population\n  ci <- mean_x + c(-1, 1) * t_value * se\n  return(ci)\n}\nnew_sample_size <- function(Allowable_Error, \n                            data,\n                            replacement = TRUE,\n                            N = 100) {\n  #Allowable error = error in decimal allowed in the new dataset \n  #data = numeric vector of dataset\n  #replacement = a logical value indicating whether sample is with or without replacement \n  #N_big = an optional numeric value representing the total population size when sampling without replacement\n  ## calculate confidence interval \n  CI <- confident_interval(data)\n  \n  ## percent error \n  PE <- (diff(CI) * 0.5) / mean(data) * 100\n  \n  ## calculate mean\n  mean_val <- mean(data)\n\n  #test_stat <- mean_val - 0.95 / (var(data)^0.5)\n  t_val <- qt(0.95, df = length(data)-1, lower.tail = T)\n  t_val\n  sd_ <- sd(data)\n  CV = (sd_ / mean_val) * 100 \n  if (replacement == FALSE) {\n    Q <- Allowable_Error^2 / (t_val^2 * CV^2)\n    n_out <- 1 / ((1 / N) + Q)\n    n_out\n    } else {\n    n_out <- (t_val^2 * CV^2)/ Allowable_Error^2\n  }\n  return(round(n_out))\n}\n```\n\n#### First we will calculate the tree level variables {.unnumbered}\n\n*Note this code also shows how to read in the real data*\n\n```{r}\n#| warning: false\n## read in our data \nplot_data <- read.csv(\"Lab4_Plotdata.csv\")\n## we are using fake data here \nspecies_list <- unique(plot_data$Species)\n## species mapping \nspecies_fullnames <- c('Cw'='western redcedar', 'Hw'='western hemlock', 'Fd'='douglas fir', 'Ra'='red alder', 'Bc'='bitter cherry')\n## convert species in the volume coefficients factor \n## assuming all trees are mature \np_load(stringr)\ncoeff_vol_bio_mat <- filter(volume_df, str_starts(tree_types, \"mature\") & Type ==\n                          'BC\\nTraditional') %>% \n  mutate(short_names = case_when(tree_types == 'mature western red cedar' ~ 'Cw',\n                                 tree_types == 'mature western hemlock' ~ 'Hw', \n                                 tree_types == 'mature douglas fir' ~ 'Fd')) %>% \n  left_join(biomass_df, by = c('tree_types' = 'trees_types_biomass'))\n\n## create a random list of species\nfake_data <- data.frame(Species = sample(species_list, 100, replace = TRUE), \n                        DBH = rnorm(100, 30, 2),\n                        Height = rnorm(100, 25, 5),\n                        PlotNo = sample(1:4, 100, replace = TRUE),\n                        Partial = sample(c(\"Full\", \"Half\"), 100, replace = TRUE),\n                        Treeno = seq(1, 100, by = 1))\n## using fake data and the volume coefficients and the species fullnames calculate the volume for each tree\nfake_data_calcs_tree <- fake_data %>%\n  #Join the volume coefficients onto the data frame \n  left_join(coeff_vol_bio_mat, by = c(\"Species\"=\"short_names\")) %>% \n  #Group by tree ID \n  group_by(Treeno) %>%\n  mutate(BA = (sqrt(DBH/(2*100)) * pi), # basal area per tree\n         Vol =  (10^(A + (B*log10(DBH)) + (C*log10(Height)))),## volume per tree\n         biomass = int + (slope * ((DBH/100)^2) * Height)) #biomass per tree\nhead(fake_data_calcs_tree)\n```\n\n#### Then we will calculate the per hectare variables for each tree {.unnumbered}\n\n```{r}\n#| warning: false\n#| code-summary: \"Calculating per hectare variables\"\n## option a \nopt_A_pHa <- fake_data_calcs_tree %>% \n  ## Add in plot adjustment\n  mutate(SPH = 1/0.04) %>% \n  group_by(Treeno) %>% \n  mutate(BA_pHa = BA * SPH, \n         Vol_pHa = Vol * SPH, \n         biomass_pHa = biomass * SPH) \n# option b \nopt_B_pHa <- fake_data_calcs_tree %>% \n  ## Add in plot adjustment\n  mutate(SPH = ifelse(Partial == \"Half\", 1/0.02, 1/0.04)) %>% \n  group_by(Treeno) %>% \n  mutate(BA_pHa = BA, \n         Vol_pHa = Vol, \n         biomass_pHa = biomass)\ntrees_pHa <- opt_B_pHa\n\n```\n\n#### Finally, we can calculate the plot and stand-level variables {.unnumbered}\n\n```{r}\n#| warning: false\n## option a\nopt_A_plot <- opt_A_pHa %>% \n  ## Group by plot\n  group_by(PlotNo) %>% \n  summarise(mean_DBH = mean(DBH, na.rm = T), \n            mean_Height = mean(Height, na.rm = T), \n            mean_BA = mean(BA, na.rm= T), \n            mean_Vol = mean(Vol, na.rm =T), \n            mean_biomass = mean(biomass, na.rm = T),\n            mean_BApHa = sum(BA_pHa, na.rm =T), \n            mean_VolpHa = sum(Vol_pHa, na.rm = T),\n            mean_biomass_pHa = sum(biomass_pHa, na.rm = T)) %>% \n  summarise_all(mean)\n## option b\nopt_B_plot <- ungroup(opt_B_pHa) %>% ## ungroup data to calculate stand level means \n  mutate(Adjst = ifelse(Partial == \"Half\", 0.5, 1)) %>%\n  reframe(mean_DBH = mean(DBH, na.rm = T), \n            mean_Height = mean(Height, na.rm = T), \n            mean_BA = mean(BA, na.rm= T), \n            mean_Vol = mean(Vol, na.rm =T), \n            mean_biomass = mean(biomass, na.rm = T),\n            mean_BApHa = mean_DBH * SPH * Adjst, \n            mean_VolHa = mean_Height * SPH * Adjst, \n            mean_biomasspHa = mean_biomass * SPH * Adjst) %>% \n  distinct()\n```\n\n### Question 1 {.unnumbered}\n\nIn the the code chunks above which options correctly calculated: A. the tree-level per hectare variables? Why? B. the stand-level variables? Why?\n\n### Question 2 {.unnumbered}\n\nUsing you answer to question 2 adjust the code below to also calculate confidence intervals for biomass per hectare.\n\n#### Calculating Confidence intervals for DBH and Mean Height {.unnumbered}\n\n```{r}\n#| warning: false\n## calculate the confidence intervals for the mean of the population\n## for the mean DBH\nadjust_confidence_func <- function(x, alpha, confident_interval) {\n  splitted <- str_split(confident_interval(x, alpha = alpha), ' ')\n  out <- paste0( round(as.numeric(splitted[[1]]), 2),'-', round(as.numeric(splitted[[2]]),2))\n}\n\nconfidence_intervals <- trees_pHa %>% \n  ## Group by plot \n  group_by(PlotNo) %>% \n  summarise(DBH_means = mean(DBH, na.rm = T),\n            Height_means = mean(Height, na.rm = T),\n            stems_per = ifelse(Partial == \"Half\", n()*2, n()) * (1/0.04), \n            volume_pHa = sum(BA_pHa, na.rm = T)\n            ## Add values here to calculate by plot \n            ## e.g.\n            #biomass_per = sum(biomass_pHa)\n            ) %>%\n  ungroup() %>% \n  summarise(DBH_CI = adjust_confidence_func(DBH_means, 0.05, confident_interval),\n            mean_DBH = round(mean(DBH_means, na.rm = T), 2),\n            Height_CI = adjust_confidence_func(Height_means, 0.05, confident_interval),\n            mean_Height = round(mean(Height_means, na.rm = T),2),\n            volume_CI = adjust_confidence_func(volume_pHa, 0.05, confident_interval),\n            mean_volume = round(mean(volume_pHa, na.rm = T),2),\n            stems_CI = adjust_confidence_func(stems_per, 0.05, confident_interval),\n            mean_stems = round(mean(stems_per, na.rm = T), 2))\n  ## add values here to calculate for the stand-level \nconfidence_intervals %>% kable(., caption =\"Confidence Intervals & mean values for DBH, Height, Volume, and Stems\")\n```\n\n### Question 3 {.unnumbered}\n\nCalculate the estimated total volume and total biomass for the 30-ha area and a 95% confidence interval for each of these with measurement units\n\n```{r}\nmean_volume <- confidence_intervals$mean_volume * 30\n#mean_biomass <- confidence_intervals$mean_biomass * 30\n```\n\n### Question 4 {.unnumbered}\n\nWhat is the estimated carbon (tonnes) and estimated carbon credits (\\$CAD) and 95% confidence intervals for the 30-ha area? *Remember: biomass estimates are in kg*\n\n### Question 5 {.unnumbered}\n\nUsing your formatted data, create a table that summarizes the plot and stand-level variables by DBH class and species. In this instance, we will need to the group the data by both Plot & DBH class prior to summarizing the data. The code below shows this to the plot level. Adjust the code to also summarize the data to the stand level. See an example of plotting below:\n\n![](images/clipboard-894189215.png)\n\n```{r}\n#| warning: false\n## using our trees_pHa data\n# create DBH cutoffs every 10 cm\nplot_stock_table <- trees_pHa %>% \n  mutate(DBH_class = cut(DBH, breaks = seq(0, 100, by = 10))) %>%\n  #Group by DBH, Species,  AND plot number (i.e grouping by plot prior to summarising)\n  group_by(PlotNo, DBH_class, Species) %>%\n  summarise(mean_DBH = mean(DBH, na.rm = T),\n            mean_VolpHa = sum(Vol_pHa, na.rm = T)) %>% \n  ## Group by species and DBH class \n  ## Drop plot level grouping\n  group_by(DBH_class, Species) \n  ## add the stand level summary here\n\n## we can plot use this plot the data \n# ggplot(plot_stock_table, aes(x = DBH_class, y = mean_VolpHa, fill = Species)) + \n#   geom_bar(stat = \"identity\", position = \"dodge\") + \n#   theme_minimal() + \n#   labs(title = \"Volume per Hectare by DBH Class and Species\", \n#        x = \"DBH Class (cm)\", y = \"Volume per Hectare (m^3)\")\n```\n\n## Reporting {.unnumbered}\n\nPrepare a short summary report for the landowner that includes the following:\n\nA.  An introduction to the report including the location of the survey, type of forest and size of the forest, along with the survey objectives.\nB.  A methods section indicating how the data were obtained (Sampling design? Spacing? Random start? Plot size? Map of plot centres? What was measured for each tree in each plot?\nC.  A results section providing a summary of the important information about this stand, using Q1 to Q4 to guide you on what to include in this section (What would you want your reader to know about the stand? Tree size? Volume perha and biomass per ha? Species composition?). Include tables to support your results. *Make sure to include captions and units for all tables and figures*\nD.  A clearly arranged appendix including your code and answers to the questions in this lab.\n\n------------------------------------------------------------------------\n\n## Lab Questions & Deliverables {.unnumbered}\n\n-   [ ] *Individuals* Complete answers for all 5 questions in the lab *including code when asked*\n-   [ ] *Group* A summary report for the landowner including an introduction, methods, results, and an appendix with code and answers to the questions in this lab.\n\n## Summary {.unnumbered}\n\nIn this lab, we used R to calculate important plot and stand level attributes. We used these attributes to produce a summary report for a forest stand that will be given to a landowner. We also calculated confidence intervals for our estimates to provide a measure of uncertainty around our estimates.\n","srcMarkdownNoYaml":"\n\n```{r echo=FALSE}\nyml_content <- yaml::read_yaml(\"chapterauthors.yml\")\nauthor <- yml_content[[\"terrain-spatial-interpolation\"]][[\"author\"]]\n```\n\nWritten by\n\n```{r results='asis', echo=FALSE}\ncat(author)\n```\n\n## Lab Overview {.unnumbered}\n\nThis lab builds on our previous work to introduce more stand-level summaries as well as using forest data to summarize important forest attributes like volume and biomass. You will work with formulas, created from test data, to understand a forest-stand. Using your estimates you will produce a data summary for a landowner. You may work in groups for this lab, but each student must be able to run the code on their own computer.\n\n------------------------------------------------------------------------\n\n## Learning Objectives {.unnumbered}\n\n-   Practice analysis of fixed-area plots to obtain plot summaries.\n\n-   Use simple random sampling to summarize plot-level data to obtain a stand-level summary\n\n-   Summarize tree-level data to obtain plot-level stand and stock tables. Use this tree level data to obtain stand-level stock and stand tables\n\n## Problem Introduction {.unnumbered}\n\n**General Description**\n\nA landowner hires you to conduct a survey of a 30-ha forested parcel of land (BC Coast). In particular, the owner would like to know how much they could make on the carbon market if they kept this forest intact and sold the carbon credits. From reading several documents, you find out that: 1) about 50% of aboveground biomass is carbon; and 2) the rate for carbon credits is about \\$65 CAD per C tonne. The owner would also like to know general information about the timber characteristics for general management purposes.\n\n------------------------------------------------------------------------\n\n## Key Formulas {.unnumbered}\n\nFor today's data investigation we will use formulas created by the ministry to calculate volume and dry biomass for different tree species in British Columbia. Models for volume use Schumaker's volume function. The coefficients are described in the table below.\n\n\\$\\$ Volume(m\\^3) = 10\\^{(A +B(Log\\_{10}(DBH(cm))) + C\\*(Log\\_{10}(Height(m))))}\\$\\$\n\n```{r}\n#| echo: false \n#| warning: false\n#| tbl-cap: BC Ministry of Forest Volume Coefficients \nset.seed(123)\nlibrary(pacman)\np_load(tidyverse, flextable, knitr)\n#main coefficients \ntree_types  <- c('immature western red cedar', 'immature western hemlock', 'immature douglas fir', 'mature western red cedar', 'mature western hemlock', 'mature douglas fir', 'red alder', 'bitter cherry')\n\n# main coefficients \nA <- c(4.139118, -4.41882, -4.319071, -4.103107, -4.3374,-4.348375, -4.431705,-4.431705)\nB <- c(1.716770,1.867780,1.813820,1.743240,1.783500,1.692440,1.778590,1.778590)\nC <- c(1.047420,1.099890,1.042420,0.981729,1.120230,1.181970,1.090770,1.090770) \n# Reshape and mutate\nvolume_df <- data.frame(tree_types, A, B, C, Type = 'BC\\nTraditional') %>% \n  arrange(Type) %>% mutate_if(is.numeric, .funs = round, digits =2)\n# Create a pretty flextable ## group by Type \nkable(volume_df, col.names = c('Tree Types', 'A', 'B', 'C', 'Source'))\n# ft <- as_grouped_data(volume_df, groups = \"Type\") %>% \n#   flextable(.) %>% \n#   theme_vanilla() %>% # Merging tree_types column to create a visual grouping \n#   set_header_labels(\n#     tree_types = \"Tree Types\",\n#     A = \"A\", B = \"B\", C = \"C\") %>% \n#   autofit() %>% \n#   set_caption(\"Volume Coefficients\")\n# ft\n\n```\n\nSimilarly, Biomass equations use the following formula:\n\n$$\nBiomass = Intercept+ Slope * DDH\n$$\n\nWhere DDH is the diameter squared times the height of the tree. $$\nDDH = (DBH(cm)/100)*(DBH(cm)/100)*Height(m) \n$$\n\n```{r}\n#| echo: false\n# biomass coefficients \n#| tbl-cap: Biomass Coefficients sourced from Standish et al. 1985\ntrees_types_biomass <- c('mature western red cedar', 'mature western hemlock', 'mature douglas fir', 'red alder', 'bitter cherry')\nint <- c(40.4, 29.8, 37.2, 4.8, 4.8)\nslope <- c(96.9, 155.8, 139.3, 206.5, 206.5)\nbiomass_df <- data.frame(trees_types_biomass, int, slope) %>% mutate_if(is.numeric, .funs = round, digits = 2)\nkable(biomass_df, col.names = c('Tree Types', 'Intercepts', 'Slope'))\n# biomass_ft <- flextable(biomass_df) %>% \n#   theme_vanilla() %>% \n#   set_header_labels(\n#     trees_types_biomass = \"Tree Types\",\n#     int = \"Intercept\", slope = \"Slope\") %>% \n#   autofit() %>% \n#   set_caption(\"Biomass Coefficients\")\n# biomass_ft\n```\n\n## Data Description {.unnumbered}\n\nYou decide to use a systematic sampling approach to determine plot centres for *n*=4 plots. For each plot center, you establish a circular, fixed-area plot (r=11.27 m; 0.04 ha) aiming to sample all trees which are ≥ 2.0 cm DBH within this radius. Some plots had a lot of trees and thus a process of \"Half Sweeps\" was conducted, where a randomly chosen half of the 0.04 ha (or a slice) was selected and only trees in that half of the plot were recorded (i.e., each tree counts twice in the 0.04 ha plot OR the plot size was reduced to 0.02 ha).\n\nFor each tree (DBH≥2.0 cm) in the plot (full or half plot), the species was recorded and the DBH (cm) was measured. On a subset of trees, the height (m) was measured in the field. For the remaining trees, the height was estimated in the office using existing height/DBH models (i.e., for each tree without height, the species-specific models developed for this area were used to estimate height from DBH).  For broken trees, the height to the break was measured in the field, and an estimate of the height that the tree might have been if not broken was also recorded in the field. A snapshot of these data are provided below.\n\nFrom these data, you determine the characteristics of the forest land and report these to the landowner, along with your estimate of potential carbon credits.\n\n```{r}\n#| echo: false\n## data \nplot_data <- read.csv(\"Lab4_Plotdata.csv\")\nplot_data %>% group_by(PlotNo) %>% \n  summarise(number_trees = n(), \n            plot_type = unique(Partial.)) %>% kable(., caption = \"Description of four selected plots including # trees & plot type\")\n\n```\n\n## Plot Level Analyses {.unnumbered}\n\nFollowing the example code below (using fake data!) use the *real* data included in your lab exercises to calculate the average tree size in terms of DBH, height and basal area per tree, total volume per tree, and biomass. Remember to report the measurements units for each of these metrics. The code below includes both a right and a wrong version. In your analysis, discuss which version you used and why. Additionally, there were some useful formulas created to analyse data in lab 3. We'll be working work this code for our analyses. Click the down-arrow to look at these functions\n\n```{r}\n#| warning: false \n#| code-fold: true\n#| code-summary: \"Useful Statistical Functions\"\nset.seed(1234)\n# load packages \nlibrary(pacman)\np_load(tidyverse, ggplot2, dplyr)\n## set up some useful functions \n## variance around the maean \nvar_simple_random <- function(data){\n  #data = numeric vector of dataset\n  ybar <- mean(data, na.rm =T) ## calculate the mean\n  top_sum <- sum((data - ybar) ^ 2)\n  df <- length(data)\n  var_simple <- top_sum/ (df-1)\n  return(var_simple)\n}\n## standard deviation w and without replacement \nsd_simple_random <- function(data, replacement = T, N_big = NULL) {\n  #data = numeric vector of dataset\n  #replacement = a logical value indicating whether sample is with or without replacement \n  #N_big = an optional numeric value representing the total population size when sampling without replacement\n  ybar <- mean(data, na.rm = T) ## calculate the mean\n  top_sum <- sum((data - ybar) ^ 2)\n  df <- length(data)\n  var_simple <- top_sum / (df - 1)\n  if (replacement == F) { # replacement is NOT true\n    ## adjustment neded to control for the limited sampel\n    if (length(N_big) == 0) {\n      return('Total Possible Needed')\n    } else if (length(N_big) > 0) {\n      adj_fct <- (N_big - df) / N_big\n      sd_mean = (var_simple / df) * adj_fct\n      return(sd_mean)\n    }\n  }\n  else {\n    sd_mean = var_simple / df\n    return(sd_mean)\n  }\n}\n## confidence intervals for mean of population\nconfident_interval <- function(x, alpha = 0.05){\n  #data = numeric vector of dataset\n  #alpha = confidence interval (default is 0.95)\n  n <- length(x)\n  mean_x <- mean(x, na.rm = T)\n  ## this is the sd of the mean \n  se <- sd(x, na.rm =T)/sqrt(n)\n  t_value <- qt(1 - alpha/2, df = n - 1)\n  ## confidence ofthe mean of the population\n  ci <- mean_x + c(-1, 1) * t_value * se\n  return(ci)\n}\nnew_sample_size <- function(Allowable_Error, \n                            data,\n                            replacement = TRUE,\n                            N = 100) {\n  #Allowable error = error in decimal allowed in the new dataset \n  #data = numeric vector of dataset\n  #replacement = a logical value indicating whether sample is with or without replacement \n  #N_big = an optional numeric value representing the total population size when sampling without replacement\n  ## calculate confidence interval \n  CI <- confident_interval(data)\n  \n  ## percent error \n  PE <- (diff(CI) * 0.5) / mean(data) * 100\n  \n  ## calculate mean\n  mean_val <- mean(data)\n\n  #test_stat <- mean_val - 0.95 / (var(data)^0.5)\n  t_val <- qt(0.95, df = length(data)-1, lower.tail = T)\n  t_val\n  sd_ <- sd(data)\n  CV = (sd_ / mean_val) * 100 \n  if (replacement == FALSE) {\n    Q <- Allowable_Error^2 / (t_val^2 * CV^2)\n    n_out <- 1 / ((1 / N) + Q)\n    n_out\n    } else {\n    n_out <- (t_val^2 * CV^2)/ Allowable_Error^2\n  }\n  return(round(n_out))\n}\n```\n\n#### First we will calculate the tree level variables {.unnumbered}\n\n*Note this code also shows how to read in the real data*\n\n```{r}\n#| warning: false\n## read in our data \nplot_data <- read.csv(\"Lab4_Plotdata.csv\")\n## we are using fake data here \nspecies_list <- unique(plot_data$Species)\n## species mapping \nspecies_fullnames <- c('Cw'='western redcedar', 'Hw'='western hemlock', 'Fd'='douglas fir', 'Ra'='red alder', 'Bc'='bitter cherry')\n## convert species in the volume coefficients factor \n## assuming all trees are mature \np_load(stringr)\ncoeff_vol_bio_mat <- filter(volume_df, str_starts(tree_types, \"mature\") & Type ==\n                          'BC\\nTraditional') %>% \n  mutate(short_names = case_when(tree_types == 'mature western red cedar' ~ 'Cw',\n                                 tree_types == 'mature western hemlock' ~ 'Hw', \n                                 tree_types == 'mature douglas fir' ~ 'Fd')) %>% \n  left_join(biomass_df, by = c('tree_types' = 'trees_types_biomass'))\n\n## create a random list of species\nfake_data <- data.frame(Species = sample(species_list, 100, replace = TRUE), \n                        DBH = rnorm(100, 30, 2),\n                        Height = rnorm(100, 25, 5),\n                        PlotNo = sample(1:4, 100, replace = TRUE),\n                        Partial = sample(c(\"Full\", \"Half\"), 100, replace = TRUE),\n                        Treeno = seq(1, 100, by = 1))\n## using fake data and the volume coefficients and the species fullnames calculate the volume for each tree\nfake_data_calcs_tree <- fake_data %>%\n  #Join the volume coefficients onto the data frame \n  left_join(coeff_vol_bio_mat, by = c(\"Species\"=\"short_names\")) %>% \n  #Group by tree ID \n  group_by(Treeno) %>%\n  mutate(BA = (sqrt(DBH/(2*100)) * pi), # basal area per tree\n         Vol =  (10^(A + (B*log10(DBH)) + (C*log10(Height)))),## volume per tree\n         biomass = int + (slope * ((DBH/100)^2) * Height)) #biomass per tree\nhead(fake_data_calcs_tree)\n```\n\n#### Then we will calculate the per hectare variables for each tree {.unnumbered}\n\n```{r}\n#| warning: false\n#| code-summary: \"Calculating per hectare variables\"\n## option a \nopt_A_pHa <- fake_data_calcs_tree %>% \n  ## Add in plot adjustment\n  mutate(SPH = 1/0.04) %>% \n  group_by(Treeno) %>% \n  mutate(BA_pHa = BA * SPH, \n         Vol_pHa = Vol * SPH, \n         biomass_pHa = biomass * SPH) \n# option b \nopt_B_pHa <- fake_data_calcs_tree %>% \n  ## Add in plot adjustment\n  mutate(SPH = ifelse(Partial == \"Half\", 1/0.02, 1/0.04)) %>% \n  group_by(Treeno) %>% \n  mutate(BA_pHa = BA, \n         Vol_pHa = Vol, \n         biomass_pHa = biomass)\ntrees_pHa <- opt_B_pHa\n\n```\n\n#### Finally, we can calculate the plot and stand-level variables {.unnumbered}\n\n```{r}\n#| warning: false\n## option a\nopt_A_plot <- opt_A_pHa %>% \n  ## Group by plot\n  group_by(PlotNo) %>% \n  summarise(mean_DBH = mean(DBH, na.rm = T), \n            mean_Height = mean(Height, na.rm = T), \n            mean_BA = mean(BA, na.rm= T), \n            mean_Vol = mean(Vol, na.rm =T), \n            mean_biomass = mean(biomass, na.rm = T),\n            mean_BApHa = sum(BA_pHa, na.rm =T), \n            mean_VolpHa = sum(Vol_pHa, na.rm = T),\n            mean_biomass_pHa = sum(biomass_pHa, na.rm = T)) %>% \n  summarise_all(mean)\n## option b\nopt_B_plot <- ungroup(opt_B_pHa) %>% ## ungroup data to calculate stand level means \n  mutate(Adjst = ifelse(Partial == \"Half\", 0.5, 1)) %>%\n  reframe(mean_DBH = mean(DBH, na.rm = T), \n            mean_Height = mean(Height, na.rm = T), \n            mean_BA = mean(BA, na.rm= T), \n            mean_Vol = mean(Vol, na.rm =T), \n            mean_biomass = mean(biomass, na.rm = T),\n            mean_BApHa = mean_DBH * SPH * Adjst, \n            mean_VolHa = mean_Height * SPH * Adjst, \n            mean_biomasspHa = mean_biomass * SPH * Adjst) %>% \n  distinct()\n```\n\n### Question 1 {.unnumbered}\n\nIn the the code chunks above which options correctly calculated: A. the tree-level per hectare variables? Why? B. the stand-level variables? Why?\n\n### Question 2 {.unnumbered}\n\nUsing you answer to question 2 adjust the code below to also calculate confidence intervals for biomass per hectare.\n\n#### Calculating Confidence intervals for DBH and Mean Height {.unnumbered}\n\n```{r}\n#| warning: false\n## calculate the confidence intervals for the mean of the population\n## for the mean DBH\nadjust_confidence_func <- function(x, alpha, confident_interval) {\n  splitted <- str_split(confident_interval(x, alpha = alpha), ' ')\n  out <- paste0( round(as.numeric(splitted[[1]]), 2),'-', round(as.numeric(splitted[[2]]),2))\n}\n\nconfidence_intervals <- trees_pHa %>% \n  ## Group by plot \n  group_by(PlotNo) %>% \n  summarise(DBH_means = mean(DBH, na.rm = T),\n            Height_means = mean(Height, na.rm = T),\n            stems_per = ifelse(Partial == \"Half\", n()*2, n()) * (1/0.04), \n            volume_pHa = sum(BA_pHa, na.rm = T)\n            ## Add values here to calculate by plot \n            ## e.g.\n            #biomass_per = sum(biomass_pHa)\n            ) %>%\n  ungroup() %>% \n  summarise(DBH_CI = adjust_confidence_func(DBH_means, 0.05, confident_interval),\n            mean_DBH = round(mean(DBH_means, na.rm = T), 2),\n            Height_CI = adjust_confidence_func(Height_means, 0.05, confident_interval),\n            mean_Height = round(mean(Height_means, na.rm = T),2),\n            volume_CI = adjust_confidence_func(volume_pHa, 0.05, confident_interval),\n            mean_volume = round(mean(volume_pHa, na.rm = T),2),\n            stems_CI = adjust_confidence_func(stems_per, 0.05, confident_interval),\n            mean_stems = round(mean(stems_per, na.rm = T), 2))\n  ## add values here to calculate for the stand-level \nconfidence_intervals %>% kable(., caption =\"Confidence Intervals & mean values for DBH, Height, Volume, and Stems\")\n```\n\n### Question 3 {.unnumbered}\n\nCalculate the estimated total volume and total biomass for the 30-ha area and a 95% confidence interval for each of these with measurement units\n\n```{r}\nmean_volume <- confidence_intervals$mean_volume * 30\n#mean_biomass <- confidence_intervals$mean_biomass * 30\n```\n\n### Question 4 {.unnumbered}\n\nWhat is the estimated carbon (tonnes) and estimated carbon credits (\\$CAD) and 95% confidence intervals for the 30-ha area? *Remember: biomass estimates are in kg*\n\n### Question 5 {.unnumbered}\n\nUsing your formatted data, create a table that summarizes the plot and stand-level variables by DBH class and species. In this instance, we will need to the group the data by both Plot & DBH class prior to summarizing the data. The code below shows this to the plot level. Adjust the code to also summarize the data to the stand level. See an example of plotting below:\n\n![](images/clipboard-894189215.png)\n\n```{r}\n#| warning: false\n## using our trees_pHa data\n# create DBH cutoffs every 10 cm\nplot_stock_table <- trees_pHa %>% \n  mutate(DBH_class = cut(DBH, breaks = seq(0, 100, by = 10))) %>%\n  #Group by DBH, Species,  AND plot number (i.e grouping by plot prior to summarising)\n  group_by(PlotNo, DBH_class, Species) %>%\n  summarise(mean_DBH = mean(DBH, na.rm = T),\n            mean_VolpHa = sum(Vol_pHa, na.rm = T)) %>% \n  ## Group by species and DBH class \n  ## Drop plot level grouping\n  group_by(DBH_class, Species) \n  ## add the stand level summary here\n\n## we can plot use this plot the data \n# ggplot(plot_stock_table, aes(x = DBH_class, y = mean_VolpHa, fill = Species)) + \n#   geom_bar(stat = \"identity\", position = \"dodge\") + \n#   theme_minimal() + \n#   labs(title = \"Volume per Hectare by DBH Class and Species\", \n#        x = \"DBH Class (cm)\", y = \"Volume per Hectare (m^3)\")\n```\n\n## Reporting {.unnumbered}\n\nPrepare a short summary report for the landowner that includes the following:\n\nA.  An introduction to the report including the location of the survey, type of forest and size of the forest, along with the survey objectives.\nB.  A methods section indicating how the data were obtained (Sampling design? Spacing? Random start? Plot size? Map of plot centres? What was measured for each tree in each plot?\nC.  A results section providing a summary of the important information about this stand, using Q1 to Q4 to guide you on what to include in this section (What would you want your reader to know about the stand? Tree size? Volume perha and biomass per ha? Species composition?). Include tables to support your results. *Make sure to include captions and units for all tables and figures*\nD.  A clearly arranged appendix including your code and answers to the questions in this lab.\n\n------------------------------------------------------------------------\n\n## Lab Questions & Deliverables {.unnumbered}\n\n-   [ ] *Individuals* Complete answers for all 5 questions in the lab *including code when asked*\n-   [ ] *Group* A summary report for the landowner including an introduction, methods, results, and an appendix with code and answers to the questions in this lab.\n\n## Summary {.unnumbered}\n\nIn this lab, we used R to calculate important plot and stand level attributes. We used these attributes to produce a summary report for a forest stand that will be given to a landowner. We also calculated confidence intervals for our estimates to provide a measure of uncertainty around our estimates.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","embed-resources":true,"output-file":"04-Compilation of Fixed Area Plots to a Stand Level.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.310","github":{"repo":"https://github.com/ubc-geomatics-community-of-practice/GEM510-GIS-for-Forestry-and-Conservation.git"},"clean":["book.bib","bookdown.bbl","packages.bib"],"split-by":"chapter","downloads":"docx","title":"Exercise 4: Compilation of Fixed-Area Plots to a Stand Level","editor":"visual"},"extensions":{"book":{"multiFile":true}}},"docx":{"identifier":{"display-name":"MS Word","target-format":"docx","base-format":"docx"},"execute":{"fig-width":5,"fig-height":4,"fig-format":"png","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"docx","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"page-width":6.5},"pandoc":{"default-image-extension":"png","to":"docx","output-file":"04-Compilation of Fixed Area Plots to a Stand Level.docx"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"github":{"repo":"https://github.com/ubc-geomatics-community-of-practice/GEM510-GIS-for-Forestry-and-Conservation.git"},"clean":["book.bib","bookdown.bbl","packages.bib"],"title":"Exercise 4: Compilation of Fixed-Area Plots to a Stand Level","editor":"visual"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","docx"]}